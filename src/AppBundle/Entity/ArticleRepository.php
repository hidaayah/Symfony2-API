<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
	protected $classTable = 'AppBundle:Article';
	/**
	 * Creates a new article
	 * @param  array  $params holds the parameters to be inserted (int author_id, text $article)
	 * @return boolean
	 */
	public function createArticle($params=array())
	{
		if(!is_array($params) || count($params) < 1) {
			return false;
		}

		$em = $this->getEntityManager();

		$article = new Article();
		$article->setArticleText($params['article']);
		$article->setAuthorId($params['author_id']);
		$article->setCreatedOn(new \DateTime());

		$em->persist($article);
		$em->flush();

		return true;
	}

	/**
	 * gets the author id for the given article
	 * @param  int $articleId The article Id
	 * @return mixed          False on error, int on success
	 */
	public function getAuthorId($articleId)
	{
		$return = false;
		if(!isset($articleId) || $articleId < 1) {
			return $return;
		}
		
		$getAuthor = $this->findOneById($articleId);
		if(!is_null($getAuthor))
		{
			$return = $getAuthor->getAuthorId();
		}

		return $return;
	}

	/**
	 * Retreives an article based on the article id given
	 * @param  int $articleId The article ID
	 * @return mixed          FALSE on error, array on success
	 */
	public function getArticle($articleId)
	{
		$return = false;
		if(!isset($articleId) || $articleId < 1) {
			return $return;
		}

		$article = $this->findOneBy(array(
			'id' => $articleId
			));
		if($article != null) {
			$createdOn = $article->getCreatedOn()->format('jS F Y @ H:i');

			$return = array(
				'article' => $article->getArticleText(),
				'created_on' => $createdOn
				);

		}

		return $return;
	}
}
